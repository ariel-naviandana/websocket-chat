<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .message {
            font-size: 16px;
            margin-bottom: 10px;
        }
        .message.right {
            text-align: right;
            background-color: #d1e7dd;
            padding: 10px;
            border-radius: 10px;
            margin-left: auto;
            max-width: 60%;
        }
        .message.left {
            text-align: left;
            background-color: #f8d7da;
            padding: 10px;
            border-radius: 10px;
            margin-right: auto;
            max-width: 60%;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1><%= title %></h1>
        <div id="joinContainer">
            <form id="loginForm">
                <input type="submit" class="btn btn-success w-100" id="loginButton" value="Join Chat"/>
            </form>
        </div>

        <div id="chatContainer" style="display: none;">
            <div id="messages" class="border p-4 mb-3" style="height: 300px; overflow-y: scroll;"></div>
            <div id="typing" class="text-muted mb-2" style="display: none;">Client is typing...</div>
            <form id="chatForm">
                <input type="text" class="form-control mb-2" id="message" placeholder="Type a message" required>
                <input type="submit" class="btn btn-success w-100" value="Send" id="send"/>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const joinContainer = document.getElementById("joinContainer");
        const chatContainer = document.getElementById("chatContainer");
        const messages = document.getElementById("messages");
        const messageInput = document.getElementById("message");
        const typingIndicator = document.getElementById("typing");

        document.getElementById("loginForm").addEventListener("submit", async (e) => {
            e.preventDefault();
            chatContainer.style.display = "block";
            joinContainer.style.display = "none";

            const response = await fetch('/messages');
            const messageHistory = await response.json();
            messageHistory.forEach(msg => {
                addMessageToChat(`${msg.text} *(${msg.senderId})`, msg.senderId === socket.id ? 'right' : 'left');
            });
        });

        messageInput.addEventListener("input", () => {
            socket.emit("typing", {});
        });

        document.getElementById("chatForm").addEventListener("submit", (e) => {
            e.preventDefault();
            if (messageInput.value) {
                const data = {
                    id: socket.id,
                    text: messageInput.value
                };
                socket.emit("message", data);
                addMessageToChat(data.text, "right");
                messageInput.value = "";
            }
        });

        socket.on("typing", () => {
            typingIndicator.style.display = "block";
            setTimeout(() => {
                typingIndicator.style.display = "none";
            }, 3000);
        });

        socket.on("message", (data) => {
            if (data.id !== socket.id) {
                addMessageToChat(`${data.text} *(${data.id})`, "left");
            }
        });

        function addMessageToChat(message, align) {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message', align);
            messageElement.textContent = message;
            messages.appendChild(messageElement);
            messages.scrollTop = messages.scrollHeight;
        }
    </script>
</body>
</html>